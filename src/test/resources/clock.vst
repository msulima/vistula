import js.Date

'''# javascript
let start = vistula.constantObservable(new Date().getTime());
'''

let clock = stdlib.time.clock

let ticks = (0 or ticks + 1 for ticks in clock)

def oddTime(clock: *js.Date) {
  if (clock.getTime() % 2 == 0) {
    clock
  } else {
    "no"
  }
}

def realTimeElapsed(elapsed) {
  clock.getTime() - elapsed
}

let timeElapsed = clock.getTime() - start

let labelText = "It is: " + clock + ", elapsed from entering page: " + timeElapsed + " in " + ticks + " real: " + realTimeElapsed(start) + " is odd: " + oddTime(clock)

let areaField = cursor.x * cursor.y

let secondsThisHour = clock.getMinutes() * 60 + clock.getSeconds()
let name = "You"

let main = '''# html
<input type="text" value="{{ name }}"/>
Hello {{ name }}!
<div>
  It's {{ (12 if (clock.getHours() % 12 == 0) else clock.getHours() % 12) }}:{{ clock.getMinutes() }}
  {% if clock.getHours() < 12 %}
    a.m.
  {% else %}
    p.m.
  {% endif %}
  <span>{{ secondsThisHour }} seconds passed this hour.</span>
</div>
<div>
  <p>{{ labelText }}</p>
  <p>
  {% if areaField < 160000 %}
    Sorry, area is <strong>too small</strong>.
  {% else %}
    Area is {{ cursor.x }} * {{ cursor.y }} = {{ areaField }} px^2
  {% endif %}
  </p>
  <ul>
    {% for person in stdlib.net.ajaxGet("http://uinames.com/api/?amount=3") %}
      <li>{{ person.name }} from {{ person.region }}</li>
    {% endfor %}
  </ul>
</div>
'''

let foo = stdlib.dom.appendChild("main", main)

'''# javascript

foo.rxForEach(() => {});

'''
