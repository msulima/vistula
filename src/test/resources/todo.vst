'''# javascript
let submitTasks = new vistula.ObservableImpl();

function capitalize(Title) {
  return Title.rxMap(function (title) {
    return title.toLocaleUpperCase();
  });
}

function capitalizeTitle(Todo) {
  return Todo.rxFlatMap(function (todo) {
      return vistula.constantObservable({
        "completed": vistula.constantObservable(true),
        "title": capitalize(todo.title)
      })
  });
}

'''

sample = {
  "title": "Finish TodoMVC",
  "completed": false
}

todos = ([sample] or arrayPush(todos, { "title": submitTasks.title, "completed": false }) for todos in submitTasks)

app = '''# html:/todo.vst.html'''

def classForIsCompleted(todo):
  if todo.completed:
    "completed"
  else:
    "view"

stdlib.dom.appendChild("todoapp", app)

'''# javascript
document.getElementById("completeAll").addEventListener("click", function (ev) {
  todos.rxForEach((todos, unsubscribe) => {
    unsubscribe();
    todos.forEach((Todo, unsubscribe) => {
      Todo.rxForEach((todo, unsubscribe) => {
        unsubscribe();
        todo.completed.rxPush(true);
      });
    });
  });
});
document.getElementById("task").addEventListener("submit", function (ev) {
  ev.preventDefault();
  let elements = ev.srcElement.elements;
  let formValue = {};
  Object.keys(elements).forEach(function (key) {
    formValue[elements[key].name] = vistula.toObservable(elements[key].value);
  });

  submitTasks.rxPush(formValue);
});
'''
